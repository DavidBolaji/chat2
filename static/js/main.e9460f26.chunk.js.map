{"version":3,"sources":["store/function.js","firebase.js","components/User/User.js","components/Sidebar/Sidebar.js","store/auth-redux.js","components/Chat/Chat.js","components/Login/Login.js","App.js","index.js","components/Chat/Chat.module.css","components/Sidebar/Sidebar.module.css","components/Login/Login.module.css","App.module.css","components/User/User.module.css"],"names":["unique","str1","str2","obj","obj2","split","forEach","e","newObj","Number","Object","values","sort","join","String","require","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firebase","provider","GoogleAuthProvider","db","firestore","User","id","msg","src","lastmsg","onClick","to","className","classes","user","Avatar","Sidebar","props","useState","users","setUsers","lastMesg","setLastMesg","authUser","useSelector","state","lastMessage","lastMsg","useEffect","collection","doc","email","set","aid","name","pic","lastmm","rId","onSnapshot","snapshot","docs","map","data","userList","filter","chat","last","newEmail","sidebar","authSlice","createSlice","initialState","isLoggedIn","reducers","login","actions","payload","addLastMsg","store","configureStore","reducer","authActions","Chat","inputRef","useRef","Email","useParams","usersEmail","setUsersEmail","usersPhoto","setUsersPhoto","messages","setMessages","dispatch","useDispatch","get","then","exists","handleSubmit","a","preventDefault","Date","toLocaleString","sid","docId","rid","current","value","timestamp","getHours","getMinutes","merge","newObjkeys","newObjValues","push","keys","i","length","message","uuidv4","left","onSubmit","type","placeholder","ref","Login","googleLogin","signInWithPopup","result","emailVerified","uid","displayName","photoURL","alert","holder","alt","google","App","setLogin","container","app","path","ReactDom","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e9460f26.chunk.js","sourcesContent":["const unique = (str1,str2) => {\r\n    let obj = {};\r\n    let obj2 = {};\r\n    str1.split('').forEach(e => {\r\n        if(!obj[e]) {\r\n            obj[e] = 0;\r\n        }\r\n        obj[e]++\r\n    })\r\n    str2.split('').forEach(e => {\r\n        if(!obj2[e]) {\r\n            obj2[e] = 0;\r\n        }\r\n        obj2[e]++\r\n    })\r\n\r\n    let newObj = Number(Object.values(obj).sort().join('')) + Number(Object.values(obj2).sort().join(''));\r\n    return String(newObj);\r\n}\r\n\r\nexport default unique;","import firebase, { initializeApp } from 'firebase/app';\r\n\r\nimport 'firebase/firestore';\r\nrequire('firebase/auth')\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC2DEhjn4vwD0M0P5Qy6aG070QhDQXTZCo\",\r\n  authDomain: \"chat-clone-87936.firebaseapp.com\",\r\n  projectId: \"chat-clone-87936\",\r\n  storageBucket: \"chat-clone-87936.appspot.com\",\r\n  messagingSenderId: \"521626344990\",\r\n  appId: \"1:521626344990:web:f98e5b08a500d2eb58d80f\",\r\n  measurementId: \"G-FKD7HB1K0G\",\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();  \r\n\r\nconst db = firebaseApp.firestore()\r\n\r\nexport default db;\r\nexport { auth, provider };","import React from 'react'\r\nimport classes from './User.module.css'\r\nimport { Link } from 'react-router-dom'\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nconst User = ({ id, msg, src, lastmsg, onClick }) => {\r\n   \r\n    return (\r\n        <Link to={`/users/${msg}`}>\r\n        <div className={classes.user} >\r\n            <Avatar src={src} />\r\n            <div className={classes.msg}>\r\n                <p>{msg}</p>\r\n                {lastmsg !== '' && <p>{lastmsg}</p>}\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport classes from './Sidebar.module.css';\r\nimport unique from '../../store/function'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport db from '../../firebase'\r\n\r\n\r\nimport User from './../User/User';\r\n\r\nconst Sidebar = (props) => {\r\n    const [users, setUsers] = useState([]);\r\n    const [lastMesg, setLastMesg] = useState({})\r\n    const authUser = useSelector(state => state.user)\r\n    const lastMessage = useSelector(state => state.lastMsg)\r\n   \r\n\r\n    useEffect(() => {  \r\n\r\n        if(authUser) {\r\n            db.collection('users').doc(authUser.email).set({\r\n               aid: authUser.id, \r\n               email: authUser.email,\r\n               name: authUser.name,\r\n               pic: authUser.pic,\r\n               lastmm: '',\r\n               rId: ''\r\n            })\r\n\r\n            db.collection('users').onSnapshot(snapshot => (\r\n           \r\n                setUsers(snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    aid: doc.data().aid,\r\n                    name: doc.data().name,\r\n                    email: doc.data().email,\r\n                    pic: doc.data().pic,\r\n                    lastmm: doc.data().lastmm,\r\n                    rId: doc.data().rId\r\n                })))\r\n            ))\r\n        }\r\n      \r\n\r\n    }, [authUser])\r\n\r\n    useEffect(() => {  \r\n        setLastMesg(lastMessage)\r\n    }, [lastMessage])\r\n\r\n\r\n\r\n    const spec = users.filter(chat => {\r\n        return authUser.email !== chat.email\r\n    })\r\n\r\n\r\n    const userList = spec.map((user) => {\r\n        \r\n        let newEmail = unique(authUser.email,user.email);\r\n        \r\n        \r\n        let last;\r\n        if(lastMesg[newEmail]) {\r\n            last = lastMesg[newEmail]\r\n        } else if (user.lastmm && user.rId === authUser.email) {\r\n            last = user.lastmm;\r\n        } else {\r\n            last = ''\r\n        }\r\n        return  <User key={user.id} id={user.id} msg={user.email} src={user.pic} lastmsg={last} />\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.sidebar}>\r\n            <div className={classes['sidebar-header']}>\r\n                <Avatar src={authUser.pic}/>\r\n                <div className={classes.user}>\r\n                    <p>{authUser.email}</p>                   \r\n                </div>\r\n            </div>\r\n            <div className={classes['sidebar-users']}>\r\n                {userList}\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initial = {\r\n    isLoggedIn: false,\r\n    user: {},\r\n    lastMsg: {}\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: initial,\r\n    reducers: {\r\n        login(state, actions) {\r\n            state.isLoggedIn = true;\r\n            state.user = actions.payload\r\n        },\r\n        addLastMsg(state, actions) {\r\n            state.lastMsg = actions.payload\r\n        }\r\n    }\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer: authSlice.reducer\r\n})\r\n\r\nexport const authActions = authSlice.actions;\r\nexport default store;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport classes from './Chat.module.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { authActions } from './../../store/auth-redux';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport unique from '../../store/function'\r\nimport 'firebase/firestore';\r\nimport db from './../../firebase';\r\n\r\nconst Chat = (props) => {\r\n\r\n    const authUser = useSelector(state => state.user)\r\n    const inputRef = useRef();\r\n    let { Email } = useParams();\r\n    const [usersEmail, setUsersEmail] = useState('');\r\n    const [usersPhoto, setUsersPhoto] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const { email } = authUser;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(Email) {\r\n            db.collection('users').doc(Email).onSnapshot(snapshot => {\r\n               \r\n                setUsersEmail(snapshot.data().email)\r\n                setUsersPhoto(snapshot.data().pic)\r\n            })\r\n\r\n            let newEmail = unique(Email,email);\r\n\r\n            db.collection('messages').doc(newEmail).get().then((doc) => {\r\n                if(doc.exists) {\r\n                    db.collection('messages').doc(newEmail).onSnapshot((snapshot) => {\r\n                       \r\n                        if(!snapshot.exists){\r\n                            return setMessages([]);\r\n                        }\r\n                        setMessages([...Object.values(snapshot.data())]);\r\n                    })\r\n                } else {\r\n                    setMessages([])\r\n                }\r\n            })\r\n\r\n            \r\n\r\n        }\r\n       \r\n    }, [Email,email])\r\n\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        let newEmail = unique(Email,email);\r\n\r\n        db.collection('messages').doc(newEmail).set({\r\n            [ new Date().toLocaleString() ]:\r\n                {sid: email,\r\n                docId: newEmail,\r\n                rid: Email, \r\n                msg: inputRef.current.value,\r\n                timestamp: new Date().getHours() + ':' + new Date().getMinutes(),\r\n                },\r\n               \r\n        },{merge: true})\r\n\r\n        await db.collection('messages').doc(newEmail).onSnapshot((snapshot) => {\r\n            setMessages([...Object.values(snapshot.data())]);\r\n        })\r\n\r\n        \r\n        db.collection('lastMsg').doc(newEmail).set({\r\n            [newEmail]: inputRef.current.value\r\n        })\r\n        \r\n        db.collection('lastMsg').onSnapshot(snapshot => {\r\n            const newObj = {}\r\n            const newObjkeys = [];\r\n            const newObjValues = [];\r\n            // eslint-disable-next-line\r\n            snapshot.docs.map(doc => {\r\n                newObjkeys.push(...Object.keys(doc.data()));\r\n                newObjValues.push(...Object.values(doc.data()));\r\n                \r\n            })\r\n\r\n            for(let i = 0; i < newObjkeys.length; i++) {\r\n                if(!newObj[newObjkeys[i]]) {\r\n                    newObj[newObjkeys[i]] = newObjValues[i]\r\n                }\r\n                newObj[newObjkeys[i]] = newObjValues[i]\r\n\r\n            }\r\n\r\n           dispatch(authActions.addLastMsg({...newObj}))\r\n           \r\n        })\r\n\r\n         db.collection('users').doc(authUser.email).set({\r\n               aid: authUser.id, \r\n               email: authUser.email,\r\n               name: authUser.name,\r\n               pic: authUser.pic,\r\n               lastmm: inputRef.current.value,\r\n               rId: Email\r\n            })\r\n\r\n       \r\n        \r\n        inputRef.current.value = \"\";\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes['user-page']}>\r\n            <div className={classes['user-page-header']}>\r\n                <Avatar src={usersPhoto}/> \r\n                <div className={classes.user}>\r\n                    <p>{usersEmail}</p>\r\n                </div>\r\n            </div>\r\n            <div className={classes['sidebar-users__chat-area']}>\r\n                {messages.map(message => {\r\n\r\n                    if(message.rid !== email){\r\n                        return (\r\n                            <div key={uuidv4()} id={uuidv4()} className={`${classes['chat-msg']} ${classes.left}`}>\r\n                                <p>{message.msg}</p>\r\n                                <span>{message.timestamp}</span>\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                         return (\r\n                            <div key={uuidv4()} id={uuidv4()} className={`${classes['chat-msg']}`}>\r\n                                <p>{message.msg}</p>\r\n                                <span>{message.timestamp}</span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })}\r\n\r\n                \r\n\r\n            </div>\r\n            <div className={classes['form-grp']}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" placeholder=\"Enter Message\" ref={inputRef} />\r\n                    <button type=\"submit\">Go</button>\r\n                </form>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport classes from './Login.module.css';\r\n// import GoogleIcon from '@mui/icons-material/Google';\r\nimport { auth, provider} from './../../firebase';\r\n// import AppleIcon from '@mui/icons-material/Apple';\r\nimport { authActions } from './../../store/auth-redux';\r\nimport TagFacesSharpIcon from '@mui/icons-material/TagFacesSharp';\r\nimport GoogleIcon from '@mui/icons-material/Google';\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const googleLogin = async () => {\r\n\r\n        try {\r\n           \r\n            const result = await auth.signInWithPopup(provider);\r\n\r\n            if(result.user.emailVerified){\r\n                dispatch(authActions.login(\r\n                    {\r\n                    id: result.user.uid,\r\n                    name: result.user.displayName,\r\n                    email: result.user.email,\r\n                    pic: result.user.photoURL\r\n                }))\r\n            }\r\n            \r\n        } catch (e) {\r\n            alert(`${e.message} please try again!!!`);\r\n        }\r\n\r\n }\r\n\r\n    return (\r\n        <div className={classes.login}>\r\n            <div className={classes.holder}>\r\n            <TagFacesSharpIcon />\r\n            <button onClick={googleLogin}>\r\n                SIGN IN \r\n                <img src=\"https://cdn-icons-png.flaticon.com/128/281/281764.png\" alt=\"google logo\" className={classes.google}/>\r\n            </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport classes from './App.module.css'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport Chat from './components/Chat/Chat';\r\nimport Login from './components/Login/Login';\r\n\r\n\r\n\r\nfunction App() {\r\n  \r\n  const isLoggedIn = useSelector(state => state.isLoggedIn);\r\n  const [login, setLogin] = useState(false) \r\n\r\n  useEffect(() => {\r\n    setLogin(isLoggedIn) \r\n  }, [isLoggedIn])\r\n  \r\n    return (\r\n     <div className={classes.container}>\r\n       <div className={classes.app}>\r\n       {!login ?\r\n       <Login /> :\r\n        <Router>\r\n\r\n          <Switch>\r\n          \r\n            <Route path=\"/users/:Email\">\r\n             <Sidebar />\r\n              <Chat />\r\n            </Route>\r\n          \r\n            <Route path=\"/\">\r\n              <Sidebar />\r\n            </Route>\r\n\r\n          \r\n          </Switch>\r\n        </Router>\r\n       }\r\n       \r\n       </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\nimport store from './store/auth-redux' \r\n\r\nReactDom.render(<Provider store={store}><App  /></Provider>,document.getElementById('root')) ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-page\":\"Chat_user-page__qlNbu\",\"user-page-header\":\"Chat_user-page-header__3XXK1\",\"box\":\"Chat_box__5217Q\",\"user\":\"Chat_user__Qgvw-\",\"sidebar-users__chat-area\":\"Chat_sidebar-users__chat-area__2skGO\",\"chat-msg\":\"Chat_chat-msg__1xEpa\",\"left\":\"Chat_left__qb1vY\",\"form-grp\":\"Chat_form-grp__3VB_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3wXLy\",\"sidebar-header\":\"Sidebar_sidebar-header__15zM2\",\"sidebar-users\":\"Sidebar_sidebar-users__1xLRi\",\"user\":\"Sidebar_user__2sF47\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1G-78\",\"holder\":\"Login_holder__1o_eP\",\"google\":\"Login_google__3WKNp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__ea6Jd\",\"app\":\"App_app__3Dx9Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3vx4Y\",\"box\":\"User_box__25MEG\",\"msg\":\"User_msg__3wBg3\"};"],"sourceRoot":""}